{"version":3,"sources":["components/Header.js","apis/DoctorFinder.js","context/DoctorsContext.js","components/AddDoctor.js","components/StarRating.js","components/Ratings.js","components/UpdateDoctor.js","components/Reviews.js","components/ReviewDoctor.js","components/DoctorInList.js","components/DoctorList.js","routes/Home.jsx","App.js","index.js"],"names":["Header","className","axios","create","baseURL","DoctorsContext","createContext","DoctorsContextProvider","props","useState","doctors","setDoctors","Provider","value","addDoctors","doctor","children","AddDoctor","useContext","name","setName","company","setLocation","priceRange","setPriceRange","handleSubmit","e","a","preventDefault","DoctorFinder","post","price_range","response","console","log","data","action","onChange","target","type","placeholder","disabled","onClick","StarRating","rating","stars","i","push","key","Math","ceil","Number","isInteger","Ratings","count","averageRating","UpdateDoctor","isUpdateSeen","setIsUpdateSeen","setCompany","stopPropagation","put","id","updatedDoctor","Modal","show","fullscreen","onHide","Title","data-dismiss","aria-label","aria-hidden","Body","htmlFor","Reviews","reviews","map","review","style","maxWidth","ReviewDoctor","setIsReviewSeen","setReviews","setCount","setAverageRating","reviewText","setReviewText","setRating","handleSubmitReview","prevReviews","prev","position","left","right","top","bottom","backgroundColor","padding","overflowY","DoctorInList","isLoaded","setIsLoaded","error","setError","isDoctorSeen","setIsDoctorSeen","isReviewSeen","average_rating","useEffect","get","fetchData","handleDelete","delete","message","cursor","repeat","handleUpdate","DoctorList","isLoading","useRef","offset","window","addEventListener","handleScroll","fetchDoctors","document","documentElement","scrollTop","scrollHeight","current","results","prevDoctors","scope","Home","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4884bca6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"font-weight-light display-1 text-center\">Doctor DB</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n\tprocess.env.NODE_ENV === \"production\"\r\n\t\t? \"api/v1/restaurants\"\r\n\t\t: \"http://localhost:3000/api/v1/doctors\";\r\n\r\nexport default axios.create({\r\n\tbaseURL: baseURL,\r\n});\r\n","import React, { useState, createContext } from \"react\";\r\nexport const DoctorsContext = createContext();\r\n\r\nexport const DoctorsContextProvider = (props) => {\r\n\tconst [doctors, setDoctors] = useState([]);\r\n\r\n\tconst addDoctors = (doctor) => {\r\n\t\tsetDoctors([doctor, ...doctors]);\r\n\t};\r\n\treturn (\r\n\t\t<DoctorsContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tdoctors,\r\n\t\t\t\tsetDoctors,\r\n\t\t\t\taddDoctors,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</DoctorsContext.Provider>\r\n\t);\r\n};\r\n","import React, { useState, useContext, useRef } from \"react\";\r\nimport DoctorFinder from \"../apis/DoctorFinder\";\r\nimport { DoctorsContext } from \"../context/DoctorsContext\";\r\n\r\nconst AddDoctor = () => {\r\n\tconst { addDoctors } = useContext(DoctorsContext);\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [company, setLocation] = useState(\"\");\r\n\tconst [priceRange, setPriceRange] = useState(\"Price Range\");\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst response = await DoctorFinder.post(\"/\", {\r\n\t\t\t\tname,\r\n\t\t\t\tcompany,\r\n\t\t\t\tprice_range: priceRange,\r\n\t\t\t});\r\n\t\t\tconsole.log(response.data.data);\r\n\t\t\taddDoctors(response.data.data.doctor);\r\n\t\t\tsetName(\"\");\r\n\t\t\tsetLocation(\"\");\r\n\t\t\tsetPriceRange(\"Price Range\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"mb-4\">\r\n\t\t\t<form action=\"\">\r\n\t\t\t\t<div className=\"form-row align-items-center\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tplaceholder=\"name\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={company}\r\n\t\t\t\t\t\t\tonChange={(e) => setLocation(e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Company\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tvalue={priceRange}\r\n\t\t\t\t\t\t\tonChange={(e) => setPriceRange(e.target.value)}\r\n\t\t\t\t\t\t\tclassName=\"custom-select my-1 mr-sm-2\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option disabled>Price Range</option>\r\n\t\t\t\t\t\t\t<option value=\"1\">$</option>\r\n\t\t\t\t\t\t\t<option value=\"2\">$$</option>\r\n\t\t\t\t\t\t\t<option value=\"3\">$$$</option>\r\n\t\t\t\t\t\t\t<option value=\"4\">$$$$</option>\r\n\t\t\t\t\t\t\t<option value=\"5\">$$$$$</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddDoctor;\r\n","import React from \"react\";\r\n\r\nconst StarRating = ({ rating }) => {\r\n\tconst stars = [];\r\n\tfor (let i = 1; i <= 5; i++) {\r\n\t\tif (i <= rating) {\r\n\t\t\tstars.push(<i key={i} className=\"fas fa-star text-warning\"></i>);\r\n\t\t} else if (i === Math.ceil(rating) && !Number.isInteger(rating)) {\r\n\t\t\tstars.push(<i key={i} className=\"fas fa-star-half-alt text-warning\"></i>);\r\n\t\t} else {\r\n\t\t\tstars.push(<i key={i} className=\"far fa-star text-warning\"></i>);\r\n\t\t}\r\n\t}\r\n\treturn <>{stars}</>;\r\n};\r\n\r\nexport default StarRating;\r\n","import React from \"react\";\r\nimport StarRating from \"./StarRating\";\r\n\r\nconst Ratings = ({ count, averageRating }) => {\r\n\tif (!count) {\r\n\t\treturn <span className=\"text-warning\">0 reviews</span>;\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StarRating rating={averageRating} />\r\n\t\t\t<span className=\"text-warning ml-1\">({count})</span>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Ratings;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport DoctorFinder from \"../apis/DoctorFinder\";\r\n\r\nconst UpdateDoctor = ({ isUpdateSeen, setIsUpdateSeen, doctor }) => {\r\n\tconst [name, setName] = useState(doctor.name);\r\n\tconst [company, setCompany] = useState(doctor.company);\r\n\tconst [priceRange, setPriceRange] = useState(doctor.price_range);\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tconst updatedDoctor = await DoctorFinder.put(`/${doctor.id}`, {\r\n\t\t\tname,\r\n\t\t\tcompany,\r\n\t\t\tprice_range: priceRange,\r\n\t\t});\r\n\r\n\t\tdoctor.name = updatedDoctor.data.data.doctor.name;\r\n\t\tdoctor.company = updatedDoctor.data.data.doctor.company;\r\n\t\tdoctor.price_range = updatedDoctor.data.data.doctor.price_range;\r\n\t\tsetIsUpdateSeen(false);\r\n\t};\r\n\treturn (\r\n\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t<Modal\r\n\t\t\t\tshow={isUpdateSeen}\r\n\t\t\t\tfullscreen={true}\r\n\t\t\t\tonHide={(e) => {\r\n\t\t\t\t\t// e.stopPropagation();\r\n\t\t\t\t\tsetIsUpdateSeen(false);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Update Doctor</Modal.Title>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\tsetIsUpdateSeen(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"close\"\r\n\t\t\t\t\t\tdata-dismiss=\"modal\"\r\n\t\t\t\t\t\taria-label=\"Close\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form action=\"\">\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\r\n\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"company\">Company</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={company}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setCompany(e.target.value)}\r\n\t\t\t\t\t\t\t\tid=\"company\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group col-4\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"rating\">Price Range</label>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tvalue={priceRange}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPriceRange(e.target.value)}\r\n\t\t\t\t\t\t\t\tid=\"price_range\"\r\n\t\t\t\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option disabled>Price Range</option>\r\n\t\t\t\t\t\t\t\t<option value=\"1\">$</option>\r\n\t\t\t\t\t\t\t\t<option value=\"2\">$$</option>\r\n\t\t\t\t\t\t\t\t<option value=\"3\">$$$</option>\r\n\t\t\t\t\t\t\t\t<option value=\"4\">$$$$</option>\r\n\t\t\t\t\t\t\t\t<option value=\"5\">$$$$$</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UpdateDoctor;\r\n","import React from \"react\";\r\nimport StarRating from \"./StarRating\";\r\n\r\nconst Reviews = ({ reviews }) => {\r\n\treturn (\r\n\t\t<div className=\"row row-cols-3 mb-2\">\r\n\t\t\t{reviews.map((review) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={review.id}\r\n\t\t\t\t\t\tclassName=\"card text-white bg-primary mb-3 mr-4\"\r\n\t\t\t\t\t\tstyle={{ maxWidth: \"30%\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"card-header d-flex justify-content-between\">\r\n\t\t\t\t\t\t\t<span>{review.name}</span>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<StarRating rating={review.rating} />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<p className=\"card-text\">{review.review}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DoctorFinder from \"../apis/DoctorFinder\";\r\nimport StarRating from \"./StarRating\";\r\nimport Reviews from \"./Reviews\";\r\n\r\nconst ReviewDoctor = ({\r\n\tdoctor,\r\n\treviews,\r\n\tsetIsReviewSeen,\r\n\tsetReviews,\r\n\tcount,\r\n\tsetCount,\r\n\taverageRating,\r\n\tsetAverageRating,\r\n}) => {\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [reviewText, setReviewText] = useState(\"\");\r\n\tconst [rating, setRating] = useState(\"Rating\");\r\n\r\n\tconst handleSubmitReview = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst response = await DoctorFinder.post(`/${doctor.id}/addReview`, {\r\n\t\t\t\tname,\r\n\t\t\t\treview: reviewText,\r\n\t\t\t\trating,\r\n\t\t\t});\r\n\t\t\tcount++;\r\n\t\t\tsetCount(count);\r\n\t\t\tsetReviews((prevReviews) => [...prevReviews, response.data.data.review]);\r\n\t\t\tsetAverageRating((prev) => {\r\n\t\t\t\treturn (prev * (count - 1)) / count + Number(rating) * (1 / count);\r\n\t\t\t});\r\n\t\t\tsetName(\"\");\r\n\t\t\tsetRating(\"Rating\");\r\n\t\t\tsetReviewText(\"\");\r\n\t\t} catch (err) {}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: \"fixed\",\r\n\t\t\t\tleft: \"0\",\r\n\t\t\t\tright: \"0\",\r\n\t\t\t\ttop: \"0\",\r\n\t\t\t\tbottom: \"0\",\r\n\t\t\t\tbackgroundColor: \"grey\",\r\n\t\t\t\tpadding: \"20px\",\r\n\t\t\t\toverflowY: \"auto\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<button\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tsetIsReviewSeen(false);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tX\r\n\t\t\t</button>\r\n\t\t\t<h1 className=\"text-center display-1\">{doctor.name}</h1>\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t<StarRating rating={averageRating} />\r\n\t\t\t\t<span className=\"text-warning ml-1\">{`(${count || 0})`}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-3\">\r\n\t\t\t\t<Reviews reviews={reviews} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t<form action=\"\">\r\n\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t<div className=\"form-group col-8\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"name\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group col-4\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"rating\">Rating</label>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tvalue={rating}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setRating(e.target.value)}\r\n\t\t\t\t\t\t\t\tid=\"rating\"\r\n\t\t\t\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option disabled>Rating</option>\r\n\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"Review\">Review</label>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tvalue={reviewText}\r\n\t\t\t\t\t\t\tonChange={(e) => setReviewText(e.target.value)}\r\n\t\t\t\t\t\t\tid=\"Review\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tonClick={handleSubmitReview}\r\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ReviewDoctor;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport Ratings from \"./Ratings\";\r\nimport { DoctorsContext } from \"../context/DoctorsContext\";\r\nimport DoctorFinder from \"../apis/DoctorFinder\";\r\nimport UpdateDoctor from \"./UpdateDoctor\";\r\nimport ReviewDoctor from \"./ReviewDoctor\";\r\n\r\nfunction DoctorInList({ doctor, setDoctors }) {\r\n\t// console.log(doctor);\r\n\tconst [isLoaded, setIsLoaded] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [isDoctorSeen, setIsDoctorSeen] = useState(true);\r\n\tconst [isUpdateSeen, setIsUpdateSeen] = useState(false);\r\n\tconst [isReviewSeen, setIsReviewSeen] = useState(false);\r\n\tconst [reviews, setReviews] = useState([]);\r\n\tdoctor.count = doctor.count || 0;\r\n\tconst [count, setCount] = useState(Number(doctor.count));\r\n\tdoctor.average_rating = doctor.average_rating || 0;\r\n\tconst [averageRating, setAverageRating] = useState(\r\n\t\tNumber(doctor.average_rating)\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await DoctorFinder.get(`/${doctor.id}`);\r\n\t\t\t\tsetReviews(response.data.data.reviews);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetError(err);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoaded(true);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst handleDelete = async (e, id) => {\r\n\t\te.stopPropagation();\r\n\t\ttry {\r\n\t\t\tsetIsDoctorSeen(false);\r\n\t\t\tawait DoctorFinder.delete(`/${id}`);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUpdate = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tsetIsUpdateSeen(true);\r\n\t};\r\n\r\n\tconst handleDoctorSelect = (e) => {\r\n\t\tsetIsReviewSeen(true);\r\n\t};\r\n\tconsole.log(\"individual rendered\");\r\n\r\n\tif (error) {\r\n\t\treturn <div>Error: {error.message}</div>;\r\n\t} else if (!isLoaded) {\r\n\t\t// return <Skeleton key={doctor.id} count={1} width={800} height={50} />;\r\n\t\treturn <h4>Loading...</h4>;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\tisDoctorSeen && (\r\n\t\t\t\t<tr\r\n\t\t\t\t\tid={doctor.id}\r\n\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\tonClick={(e) => handleDoctorSelect(e)}\r\n\t\t\t\t\tkey={doctor.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* {console.log(\"reviews in return\")}\r\n\t\t\t\t{console.log(reviews)} */}\r\n\t\t\t\t\t{isReviewSeen && (\r\n\t\t\t\t\t\t<ReviewDoctor\r\n\t\t\t\t\t\t\tsetIsReviewSeen={setIsReviewSeen}\r\n\t\t\t\t\t\t\tdoctor={doctor}\r\n\t\t\t\t\t\t\treviews={reviews}\r\n\t\t\t\t\t\t\tsetReviews={setReviews}\r\n\t\t\t\t\t\t\tcount={count}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\taverageRating={averageRating}\r\n\t\t\t\t\t\t\tsetAverageRating={setAverageRating}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<td>{doctor.name}</td>\r\n\t\t\t\t\t<td>{doctor.company}</td>\r\n\t\t\t\t\t<td>{\"$\".repeat(doctor.price_range)}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<Ratings count={count} averageRating={averageRating} />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={(e) => handleUpdate(e)}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-warning\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{isUpdateSeen && (\r\n\t\t\t\t\t\t\t<UpdateDoctor\r\n\t\t\t\t\t\t\t\tisUpdateSeen={isUpdateSeen}\r\n\t\t\t\t\t\t\t\tsetIsUpdateSeen={setIsUpdateSeen}\r\n\t\t\t\t\t\t\t\tdoctor={doctor}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={(e) => handleDelete(e, doctor.id)}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DoctorInList;\r\n","import React, { useEffect, useContext, useState, useRef } from \"react\";\r\nimport DoctorFinder from \"../apis/DoctorFinder\";\r\nimport { DoctorsContext } from \"../context/DoctorsContext\";\r\nimport DoctorInList from \"./DoctorInList\";\r\n// import useDoctors from \"../hooks/useDoctors\";\r\nconst DoctorList = () => {\r\n\tconst { doctors, setDoctors } = useContext(DoctorsContext);\r\n\tconst isLoading = useRef(false);\r\n\tconst offset = useRef(0);\r\n\tconsole.log(\"doctor list rendered\");\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"scroll\", handleScroll);\r\n\t\tfetchDoctors();\r\n\t\t// return () => window.removeEventListener(\"scroll\", handleScroll);\r\n\t}, []);\r\n\r\n\tconst handleScroll = () => {\r\n\t\tif (\r\n\t\t\tdocument.documentElement.scrollTop >\r\n\t\t\t\tdocument.documentElement.scrollHeight - 1500 &&\r\n\t\t\t!isLoading.current\r\n\t\t) {\r\n\t\t\tfetchDoctors();\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchDoctors = async () => {\r\n\t\tisLoading.current = true; //?\r\n\t\ttry {\r\n\t\t\tconst response = await DoctorFinder.get(`/name/${offset.current}/ASC`);\r\n\t\t\tif (response.data.results !== 0) {\r\n\t\t\t\tisLoading.current = false;\r\n\t\t\t\tsetDoctors((prevDoctors) => [\r\n\t\t\t\t\t...prevDoctors,\r\n\t\t\t\t\t...response.data.data.doctors,\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\t// isLoading.current = false; //?\r\n\t\t\toffset.current += 40;\r\n\t\t} catch (err) {}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"list-group\">\r\n\t\t\t<table className=\"table table-hover table-dark\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr className=\"bg-primary\">\r\n\t\t\t\t\t\t<th scope=\"col\">Doctor</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Company</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Price Range</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Ratings</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Edit</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Delete</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{doctors.map((doctor) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<DoctorInList\r\n\t\t\t\t\t\t\t\tkey={doctor.id}\r\n\t\t\t\t\t\t\t\tdoctor={doctor}\r\n\t\t\t\t\t\t\t\tsetDoctors={setDoctors}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t{/* {!isLoading.current}\r\n\t\t\t{!isLoading.current && (\r\n\t\t\t\t<div style={{ position: \"fixed\", bottom: \"20px\" }}>\r\n\t\t\t\t\t<h3>Scroll Down</h3>\r\n\t\t\t\t</div>\r\n\t\t\t)} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DoctorList;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport AddDoctor from \"../components/AddDoctor\";\r\nimport DoctorList from \"../components/DoctorList\";\r\nimport useDoctors from \"../hooks/useDoctors\";\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<AddDoctor />\r\n\t\t\t<DoctorList />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport { DoctorsContextProvider } from \"./context/DoctorsContext\";\r\nconst App = () => {\r\n\treturn (\r\n\t\t<DoctorsContextProvider>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t</DoctorsContextProvider>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}